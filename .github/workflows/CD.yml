# workflow의 이름
name: CD

# 해당 workflow가 언제 실행될 것인지에 대한 트리거를 지정
on:
  push:
    branches: [ main ] # main branch로 push 될 때 실행됩니다.

# 해당 yml 내에서 사용할 key - value
env:
  S3_BUCKET_NAME: birca-deploy-bucket
  PROJECT_NAME: birca

# workflow는 한개 이상의 job을 가지며, 각 job은 여러 step에 따라 단계를 나눌 수 있습니다.
jobs:
  build:
    name: CD
    # 해당 jobs에서 아래의 steps들이 어떠한 환경에서 실행될 것인지를 지정합니다.
    runs-on: ubuntu-latest

    steps:
      # 작업에서 액세스할 수 있도록 $GITHUB_WORKSPACE에서 저장소를 체크아웃합니다.
      - uses: actions/checkout@v2
      - name: Set up JDK 17
        uses: actions/setup-java@v2
        with:
          java-version: '17'
          distribution: 'temurin'

      - name: Grant execute permission for gradlew
        run: chmod +x ./gradlew
        shell: bash

      - name: Build with Gradle
        env:
          JWT_KEY: ${{ secrets.JWT_KEY }}
          INVOKE_URL: ${{ secrets.INVOKE_URL }}
          SERVICE_KEY: ${{ secrets.SERVICE_KEY }}
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_S3_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_S3_SECRET_KEY }}
          AWS_S3_BUCKET: ${{ secrets.AWS_S3_BUCKET }}
          RDS_HOST: ${{ secrets.RDS_HOST }}
          RDS_NAME: ${{ secrets.RDS_NAME }}
          RDS_PASSWORD: ${{ secrets.RDS_PASSWORD }}
        run: |
          echo "Using JWT_KEY: $JWT_KEY"
          echo "Using INVOKE_URL: $INVOKE_URL"
          echo "Using SERVICE_KEY: $SERVICE_KEY"
          echo "Using AWS_ACCESS_KEY_ID: $AWS_ACCESS_KEY_ID"
          echo "Using AWS_SECRET_ACCESS_KEY: $AWS_SECRET_ACCESS_KEY"
          echo "Using AWS_S3_BUCKET: $AWS_S3_BUCKET"
          echo "Using URL: $RDS_HOST"
          echo "Using USERNAME: $RDS_NAME"
          echo "Using PASSWORD: $RDS_PASSWORD"
          ./gradlew clean build --exclude-task test

      - name: Make zip file
        run: zip -r ./$GITHUB_SHA.zip .
        shell: bash

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_KEY }}
          aws-region: ap-northeast-2

      # script files 복사
      - name: Copy script
        run: cp ./scripts/*.sh ./deploy

      # S3에 업로드
      - name: Upload to S3
        run: aws s3 cp --region ap-northeast-2 ./$GITHUB_SHA.zip s3://$S3_BUCKET_NAME/$PROJECT_NAME/$GITHUB_SHA.zip

      # Deploy
      - name: Deploy
        run: |
          aws deploy create-deployment \
          --application-name birca-codedeploy-application \
          --deployment-config-name CodeDeployDefault.AllAtOnce \
          --deployment-group-name birca-cicd-prod \
          --file-exists-behavior OVERWRITE \
          --s3-location bucket=birca-deploy-bucket,bundleType=zip,key=birca-application/$GITHUB_SHA.zip \
          --region ap-northeast-2 \